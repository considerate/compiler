module Main where
import lexer.Lexer (scanTokens, toValidTokens, lex)
import lexer.Punkt0Lexer (identifier, token)
import parser.Punkt0Parser (program, expression, simpleexpression)

main :: [String] -> IO ()
main _
    = getContents >>= \str ->
        let
            tokens = ((scanTokens token) . CharSequence.fromString) str
            parseTree = (program.run . toValidTokens) tokens
        in mapM_ println tokens
            >> (println . show) parseTree
