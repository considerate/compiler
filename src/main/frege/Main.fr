module Main where
import lexer.Lexer (runLexer, toValidTokens)
import lexer.Punkt0Lexer (token)
import parser.Punkt0Parser (program, expression, simpleexpression)

main :: [String] -> IO ()
main _
    = getContents >>= \str ->
        let
            tokens = ((runLexer token) . toList) str
            parseTree = (program.run . toValidTokens) tokens
        in (println . show) tokens
            >> (println . show) parseTree


