
class IntList {
    var head : Int = 0;
    var tail : IntList = null;
    var set : Boolean = false;
    def cons(h : Int, t : IntList) : IntList = {
        if (set) {
            println("Screw You.");
            this
        }
        else {
            head = h;
            tail = t;
            set = true;
            this
        }
    }
    def head() : Int = {head}
    def tail() : IntList = {tail}
}

fun fact = λn : Int.
    if (n==0) 1 else n * (fact (n-1)) : Int

fun cons = λh : Int. λl : IntList.
    new IntList().cons(h,l) : IntList

fun map = λf : Int -> Int. λl : IntList.
     if (l==null)
        l
     else
        cons (f l.head()) (map f l.tail()) : IntList

fun toString = λl : IntList.
    if (l==null)
        "Nil"
    else
        l.head() + " :: " + toString l.tail() : String

fun foldr = λf : Int -> Int -> Int. λx : Int. λxs : IntList.
      if (xs == null)
        x
      else
        foldr f (f xs.head() x) xs.tail() : Int;

class Fun {
  var foldr : (Int -> Int -> Int) -> Int -> IntList -> Int = foldr;
  var add : Int -> Int -> Int = λx : Int. λy : Int. x + y;
   def sum(xs : IntList) : Int = {
     foldr add 0 xs
   }
}

object Main extends App {
    var map : (Int -> Int) -> IntList -> IntList = map;
    println(fact $ 6) //720
    ; println (toString $ cons 1 null)
    ; println(toString $ map fact $ cons 1 $ cons 3 $ cons 6 null)
    ; println(new Fun().sum(cons 4 $ cons 8 null))
}

